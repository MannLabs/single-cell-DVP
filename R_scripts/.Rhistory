dplyr::select(cell_ID, int_core, Protein) %>%
spread(cell_ID, int_core) %>%
arrange(Protein) %>%
column_to_rownames("Protein") -> d_wide_90
## Limma statistics
design <- model.matrix(~p_bins[colnames(d_wide_90),]$bin)
fit <- lmFit(d_wide_90, design)
fit <- eBayes(fit)
limma_8 <- topTable(fit, number = Inf, confint = TRUE, coef = 2, adjust.method = "fdr") %>%
rownames_to_column("Protein") %>%
left_join(meta_pg) %>%
arrange(logFC) %>%
mutate(FC_rank = c(1:nrow(.))) %>%
mutate(significant = adj.P.Val < 0.05)
d %>%
dplyr::select(cell_ID, int_core, Protein) %>%
left_join(p_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, bin) %>%
summarise(int = log2(median(2^int_core))) %>%
drop_na(bin) %>%
spread(bin, int) %>%
column_to_rownames("Protein") -> d_wide_90
View(limma_8)
## Heatmappping data
d_heatmap <- d_wide_90[limma_8 %>% arrange(logFC) %>% pull(Protein),]
myBreaks <- c(seq(-2,2, by = 0.1))
myColor <- colorRampPalette(viridis(100, option = "inferno"))(length(myBreaks))
pheatmap(scale(t(d_heatmap)),
breaks = myBreaks,
color = myColor,
cutree_cols = 1,
show_colnames = T,
show_rownames = T,
cluster_rows = F,
cluster_cols = F) -> plot_pheatmap
## -- Prepare Workspace
cat("\014")
rm(list=ls())
## Read relevant data
load("../output/variables/d.R")
load("../output/Variables/meta_distances.R")
load("../output/Variables/SA_incl_all.R")
## -- Halpern et al, RNASeq data, 9 spatial clusters
## Define number of classes
classes = 9
## Subset to 90% complete proteins
SA_incl_heps <- d %>%
filter(cell_ID %in% meta_distances$cell_ID) %>%
distinct(cell_ID) %>%
pull(cell_ID)
data.frame(cell_ID = meta_distances$cell_ID, ratio = meta_distances$ratio) %>%
mutate(range = cut_interval(ratio, n = classes))  -> distance_bins_tmp
distance_bins_tmp %>%
filter(cell_ID %in% SA_incl_heps) %>%
distinct(range) %>%
arrange(range) %>%
mutate(bin = c(1:classes)) %>%
right_join(p_bins) %>%
filter(cell_ID %in% SA_incl_heps) %>%
column_to_rownames("cell_ID") %>%
mutate(bin = abs(bin - (classes + 1))) -> distance_bins
distance_bins_tmp %>%
filter(cell_ID %in% SA_incl_heps) %>%
distinct(range) %>%
arrange(range) %>%
mutate(bin = c(1:classes)) %>%
right_join(distance_bins_tmp) %>%
filter(cell_ID %in% SA_incl_heps) %>%
column_to_rownames("cell_ID") %>%
mutate(bin = abs(bin - (classes + 1))) -> distance_bins
d %>%
dplyr::select(cell_ID, int_core, Protein) %>%
left_join(distance_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, bin) %>%
summarise(int = log2(median(2^int_core))) %>%
drop_na(bin) -> test
View(test)
View(d)
d %>%
dplyr::select(cell_ID, int_core, Protein, Symbol, Genename, ENSEMBL) %>%
left_join(distance_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, bin) %>%
summarise(int = log2(median(2^int_core))) %>%
drop_na(bin) -> test
d %>%
dplyr::select(cell_ID, int_core, Protein, Symbol, Genename, ENSEMBL) %>%
left_join(distance_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, Genename, ENSEMBL, bin) %>%
summarise(int = log2(median(2^int_core))) %>%
drop_na(bin) -> test
d %>%
dplyr::select(cell_ID, int_core, Protein, Symbol, Genename, ENSEMBL) %>%
left_join(distance_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, Genename, ENSEMBL, bin) %>%
summarise(int = log2(median(2^int_core))) %>%
drop_na(bin) -> table_proteome_to_RNASeq
write_tsv(table_proteome_to_RNASeq, "../output/Tables/Proteome_to_RNASeq_9spatialbins.tsv")
str(table_proteome_to_RNASeq)
write_tsv(as.data.frame(table_proteome_to_RNASeq), "../output/Tables/Proteome_to_RNASeq_9spatialbins.tsv")
d %>%
dplyr::select(cell_ID, int_core, Protein, Symbol, ENSEMBL) %>%
left_join(distance_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, ENSEMBL, bin) %>%
summarise(int = log2(median(2^int_core))) %>%
drop_na(bin) -> table_proteome_to_RNASeq
write_tsv(as.data.frame(table_proteome_to_RNASeq), "../output/Tables/Proteome_to_RNASeq_9spatialbins.tsv")
## -- Prepare Workspace
cat("\014")
rm(list=ls())
## Read relevant data
load("../output/variables/d.R")
load("../output/Variables/p_bins.R")
load("../output/Variables/SA_incl_all.R")
View(p_bins)
## Subset to 90% complete proteins
SA_incl_heps <- d %>%
filter(cell_ID %in% p_bins$cell_ID) %>%
distinct(cell_ID) %>%
pull(cell_ID)
p_bins$cell_ID
## Subset to 90% complete proteins
SA_incl_heps <- d %>%
filter(cell_ID %in% rownames(p_bins)) %>%
distinct(cell_ID) %>%
pull(cell_ID)
## -- Ben-Moshe et al., FASC/Proteomics data, 9 PCA clusters
## Define number of classes
classes = 9
## Subset to 90% complete proteins
SA_incl_heps <- d %>%
filter(cell_ID %in% rownames(p_bins)) %>%
distinct(cell_ID) %>%
pull(cell_ID)
data.frame(cell_ID = rownames(p_bins), pc1 = p_bins$pc1) %>%
mutate(range = cut_interval(pc1, n = classes))  -> p_bins_tmp
p_bins_tmp %>%
filter(cell_ID %in% SA_incl_heps) %>%
distinct(range) %>%
arrange(range) %>%
mutate(bin = c(1:classes)) %>%
right_join(p_bins_tmp) %>%
filter(cell_ID %in% SA_incl_heps) %>%
column_to_rownames("cell_ID") %>%
mutate(bin = abs(bin - (classes + 1))) -> p_bins
View(p_bins)
## Subset to 90% complete proteins
SA_incl_heps <- d %>%
filter(cell_ID %in% rownames(p_bins)) %>%
distinct(cell_ID) %>%
pull(cell_ID)
data.frame(cell_ID = rownames(p_bins), pc1 = p_bins$pc1) %>%
mutate(range = cut_interval(pc1, n = classes))  -> p_bins_tmp
p_bins_tmp %>%
filter(cell_ID %in% SA_incl_heps) %>%
distinct(range) %>%
arrange(range) %>%
mutate(bin = c(1:classes)) %>%
right_join(p_bins_tmp) %>%
filter(cell_ID %in% SA_incl_heps) %>%
column_to_rownames("cell_ID") %>%
mutate(bin = abs(bin - (classes + 1))) -> p_bins
d %>%
dplyr::select(cell_ID, int_core, Protein, Symbol, ENSEMBL) %>%
left_join(p_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, ENSEMBL, bin) %>%
summarise(int = log2(median(2^int_core))) %>%
drop_na(bin) -> table_proteome_to_FACS
View(table_proteome_to_FACS)
###########################
#### scDVP Figure Code ####
###########################
#### -- Script caller -- ####
## -- Prepare Workspace
cat("\014")
rm(list=ls())
## -- Package setup
packages <- c("rstudioapi",
"tidyverse",
"WebGestaltR",
"limma",
"org.Mm.eg.db",
"viridis",
"ggrepel",
"pheatmap")
for (p in packages) {
if (!require(p, character.only = TRUE)) {
install.packages(p)
library(p, character.only = TRUE)
}
}
## -- Set Working Directory
setwd(dirname(getActiveDocumentContext()$path))
# check if the folder exists
lapply(c("../output/Figures", "../output/Variables/", "../output/Tables"), function(paths){
if (!dir.exists(paths)) {
# create the folder if it doesn't exist
dir.create(paths)
cat("Folder created: ", paths, "\n")
} else {
cat("Folder already exists: ", paths, "\n")
}
})
invisible(file.remove(list.files("../output/Figures", full.names = TRUE)))
invisible(file.remove(list.files("../output/Variables", full.names = TRUE)))
invisible(file.remove(list.files("../output/Tables", full.names = TRUE)))
## -- Set RefQuant data file
refquant <- "../Data/89f5921594c92799946e67301cc9f12b_scDVP_refquant_corrected.formatted_for_iq.tsv.maxlfq_iq_protein_intensities.tsv"
save(refquant, file = "../output/Variables/refquant.R")
## -- Call files in order of appearance
source("./Data-wrangling.R")
source("./Histone-levels.R")
source("./PCA_Endothelial.R")
source("./PCA_Hepatocytes.R")
source("./PCA_vs_geometric-distance.R")
source("./Completeness_vs_Intensity.R")
source("./Rank_versus_Intensity.R")
source("./CVs.R")
source("./Labelling-efficiency.R")
source("./Protein-IDs_vs_Area.R")
source("./Protein-IDs_vs_Runs.R")
source("./Pseudo-FACS.R")
source("./Prediction_class_proteomes.R")
source("./Prediction_new_mouse.R")
source("./Heatmap_global.R")
source("./Clustered_tables.R")
## -- Prepare Workspace
cat("\014")
rm(list=ls())
## Read relevant data
load("../output/variables/d.R")
load("../output/Variables/meta_distances.R")
load("../output/Variables/SA_incl_all.R")
## -- Halpern et al, RNASeq data, 9 spatial clusters
## Define number of classes
classes = 9
## Subset to 90% complete proteins
SA_incl_heps <- d %>%
filter(cell_ID %in% meta_distances$cell_ID) %>%
distinct(cell_ID) %>%
pull(cell_ID)
data.frame(cell_ID = meta_distances$cell_ID, ratio = meta_distances$ratio) %>%
mutate(range = cut_interval(ratio, n = classes))  -> distance_bins_tmp
distance_bins_tmp %>%
filter(cell_ID %in% SA_incl_heps) %>%
distinct(range) %>%
arrange(range) %>%
mutate(bin = c(1:classes)) %>%
right_join(distance_bins_tmp) %>%
filter(cell_ID %in% SA_incl_heps) %>%
column_to_rownames("cell_ID") %>%
mutate(bin = abs(bin - (classes + 1))) -> distance_bins
View(distance_bins)
d %>%
dplyr::select(cell_ID, int_core, Protein, Symbol, ENSEMBL) %>%
left_join(distance_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, ENSEMBL, bin) %>%
summarise(int = log2(median(2^int_core))) %>%
drop_na(bin) -> table_proteome_to_RNASeq
View(table_proteome_to_RNASeq)
d %>%
dplyr::select(cell_ID, int_core, Protein, Symbol, ENSEMBL) %>%
left_join(distance_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, ENSEMBL, bin) %>%
summarise(int = log2(mean(2^int_core))) %>%
drop_na(bin) -> table_proteome_to_RNASeq
d %>%
dplyr::select(cell_ID, int_core, Protein, Symbol, ENSEMBL) %>%
left_join(distance_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, ENSEMBL, bin) %>%
summarise(int = log2(median(2^int_core))) %>%
drop_na(bin) -> table_proteome_to_RNASeq
d %>%
dplyr::select(cell_ID, int_core, Protein, Symbol, ENSEMBL) %>%
left_join(distance_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, ENSEMBL, bin) -> test
View(test)
d %>%
dplyr::select(cell_ID, int_core, Protein, Symbol, ENSEMBL) %>%
left_join(distance_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, ENSEMBL, bin) %>%
drop_na(bin) %>%
summarise(int = log2(median(2^int_core))) %>%
drop_na(bin) -> table_proteome_to_RNASeq
d %>%
dplyr::select(cell_ID, int_core, Protein, Symbol, ENSEMBL) %>%
left_join(distance_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, ENSEMBL, bin) %>%
drop_na(bin) -> test
## Read relevant data
load("../output/variables/d.R")
load("../output/Variables/p_bins.R")
load("../output/Variables/SA_incl_all.R")
## -- Ben-Moshe et al., FASC/Proteomics data, 9 PCA clusters
## Define number of classes
classes = 9
## Subset to 90% complete proteins
SA_incl_heps <- d %>%
filter(cell_ID %in% rownames(p_bins)) %>%
distinct(cell_ID) %>%
pull(cell_ID)
data.frame(cell_ID = rownames(p_bins), pc1 = p_bins$pc1) %>%
mutate(range = cut_interval(pc1, n = classes))  -> p_bins_tmp
p_bins_tmp %>%
filter(cell_ID %in% SA_incl_heps) %>%
distinct(range) %>%
arrange(range) %>%
mutate(bin = c(1:classes)) %>%
right_join(p_bins_tmp) %>%
filter(cell_ID %in% SA_incl_heps) %>%
column_to_rownames("cell_ID") %>%
mutate(bin = abs(bin - (classes + 1))) -> p_bins
d %>%
dplyr::select(cell_ID, int_core, Protein, Symbol, ENSEMBL) %>%
left_join(p_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, ENSEMBL, bin) %>%
summarise(int = log2(median(2^int_core))) %>%
drop_na(bin) -> table_proteome_to_FACS
View(table_proteome_to_FACS)
d %>%
dplyr::select(cell_ID, int_core, Protein, Symbol, ENSEMBL) %>%
left_join(p_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, ENSEMBL, bin) -> test_FACS
View(test_FACS)
View(test)
View(d)
d %>%
dplyr::select(cell_ID, int_core, Protein) %>%
spread(cell_ID, int_core) %>%
gather(cell_ID, int_core, !Protein) %>%
mutate(int_core = ifelse(is.na(int_core, 0, int_core))) %>%
left_join(distance_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, ENSEMBL, bin) %>%
drop_na(bin) %>%
summarise(int = log2(mean(2^int_core))) %>%
drop_na(bin) -> table_proteome_to_RNASeq
d %>%
dplyr::select(cell_ID, int_core, Protein) %>%
spread(cell_ID, int_core) %>%
gather(cell_ID, int_core, !Protein) %>%
mutate(int_core = ifelse(is.na(int_core), 0, int_core)) %>%
left_join(distance_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, ENSEMBL, bin) %>%
drop_na(bin) %>%
summarise(int = log2(mean(2^int_core))) %>%
drop_na(bin) -> table_proteome_to_RNASeq
d %>%
dplyr::select(cell_ID, int_core, Protein) %>%
spread(cell_ID, int_core) %>%
gather(cell_ID, int_core, !Protein) %>%
mutate(int_core = ifelse(is.na(int_core), 0, int_core)) %>%
left_join(distance_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, bin) %>%
drop_na(bin) %>%
summarise(int = log2(mean(2^int_core))) %>%
drop_na(bin) -> table_proteome_to_RNASeq
View(table_proteome_to_RNASeq)
load("../output/Variables/meta_pg.R")
d %>%
dplyr::select(cell_ID, int_core, Protein) %>%
spread(cell_ID, int_core) %>%
gather(cell_ID, int_core, !Protein) %>%
mutate(int_core = ifelse(is.na(int_core), 0, int_core)) %>%
left_join(distance_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
left_join(meta_pg) %>%
group_by(Protein, ENSEMBL, Symbol, bin) %>%
drop_na(bin) %>%
summarise(int = log2(mean(2^int_core))) %>%
drop_na(bin) -> table_proteome_to_RNASeq
d %>%
dplyr::select(cell_ID, int_core, Protein) %>%
spread(cell_ID, int_core) %>%
gather(cell_ID, int_core, !Protein) %>%
mutate(int_core = ifelse(is.na(int_core), 0, int_core)) %>%
left_join(meta_pg) %>%
left_join(p_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, ENSEMBL, bin) -> test_FACS
d %>%
dplyr::select(cell_ID, int_core, Protein) %>%
spread(cell_ID, int_core) %>%
gather(cell_ID, int_core, !Protein) %>%
mutate(int_core = ifelse(is.na(int_core), 0, int_core)) %>%
left_join(meta_pg) %>%
left_join(p_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, ENSEMBL, bin) %>%
summarise(int = log2(median(2^int_core))) %>%
drop_na(bin) -> table_proteome_to_FACS
View(table_proteome_to_FACS)
d %>%
dplyr::select(cell_ID, int_core, Protein) %>%
spread(cell_ID, int_core) %>%
gather(cell_ID, int_core, !Protein) %>%
mutate(int_core = ifelse(is.na(int_core), 0, int_core)) %>%
left_join(meta_pg) %>%
left_join(p_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, ENSEMBL, bin) %>%
summarise(int = log2(mean(2^int_core))) %>%
drop_na(bin) -> table_proteome_to_FACS
###########################
#### scDVP Figure Code ####
###########################
#### -- Figure 3A -- ####
## -- Prepare Workspace
cat("\014")
rm(list=ls())
## Read relevant data
load("../output/variables/d.R")
load("../output/Variables/meta_distances.R")
load("../output/Variables/SA_incl_all.R")
load("../output/Variables/meta_pg.R")
## -- Halpern et al, RNASeq data, 9 spatial clusters
## Define number of classes
classes = 9
## Subset to 90% complete proteins
SA_incl_heps <- d %>%
filter(cell_ID %in% meta_distances$cell_ID) %>%
distinct(cell_ID) %>%
pull(cell_ID)
data.frame(cell_ID = meta_distances$cell_ID, ratio = meta_distances$ratio) %>%
mutate(range = cut_interval(ratio, n = classes))  -> distance_bins_tmp
distance_bins_tmp %>%
filter(cell_ID %in% SA_incl_heps) %>%
distinct(range) %>%
arrange(range) %>%
mutate(bin = c(1:classes)) %>%
right_join(distance_bins_tmp) %>%
filter(cell_ID %in% SA_incl_heps) %>%
column_to_rownames("cell_ID") %>%
mutate(bin = abs(bin - (classes + 1))) -> distance_bins
d %>%
dplyr::select(cell_ID, int_core, Protein) %>%
spread(cell_ID, int_core) %>%
gather(cell_ID, int_core, !Protein) %>%
mutate(int_core = ifelse(is.na(int_core), 0, int_core)) %>%
left_join(distance_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
left_join(meta_pg) %>%
group_by(Protein, ENSEMBL, Symbol, bin) %>%
drop_na(bin) %>%
summarise(int = log2(mean(2^int_core))) %>%
drop_na(bin) -> table_proteome_to_RNASeq
write_tsv(as.data.frame(table_proteome_to_RNASeq), "../output/Tables/Proteome_to_RNASeq_9spatialbins.tsv")
## -- Prepare Workspace
cat("\014")
rm(list=ls())
## Read relevant data
load("../output/variables/d.R")
load("../output/Variables/p_bins.R")
load("../output/Variables/SA_incl_all.R")
load("../output/Variables/meta_pg.R")
## -- Ben-Moshe et al., FASC/Proteomics data, 8 PCA clusters
## Define number of classes
classes = 9
## Subset to 90% complete proteins
SA_incl_heps <- d %>%
filter(cell_ID %in% rownames(p_bins)) %>%
distinct(cell_ID) %>%
pull(cell_ID)
data.frame(cell_ID = rownames(p_bins), pc1 = p_bins$pc1) %>%
mutate(range = cut_interval(pc1, n = classes))  -> p_bins_tmp
p_bins_tmp %>%
filter(cell_ID %in% SA_incl_heps) %>%
distinct(range) %>%
arrange(range) %>%
mutate(bin = c(1:classes)) %>%
right_join(p_bins_tmp) %>%
filter(cell_ID %in% SA_incl_heps) %>%
column_to_rownames("cell_ID") %>%
mutate(bin = abs(bin - (classes + 1))) -> p_bins
d %>%
dplyr::select(cell_ID, int_core, Protein) %>%
spread(cell_ID, int_core) %>%
gather(cell_ID, int_core, !Protein) %>%
mutate(int_core = ifelse(is.na(int_core), 0, int_core)) %>%
left_join(meta_pg) %>%
left_join(p_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, ENSEMBL, bin) %>%
summarise(int = log2(mean(2^int_core))) %>%
drop_na(bin) -> table_proteome_to_FACS
write_tsv(as.data.frame(table_proteome_to_FACS), "../output/Tables/Proteome_to_FACS_9PCbins.tsv")
load("../output/variables/d.R")
load("../output/Variables/p_bins.R")
load("../output/Variables/SA_incl_all.R")
load("../output/Variables/meta_pg.R")
## -- Ben-Moshe et al., FASC/Proteomics data, 8 PCA clusters
## Define number of classes
classes = 8
## Subset to 90% complete proteins
SA_incl_heps <- d %>%
filter(cell_ID %in% rownames(p_bins)) %>%
distinct(cell_ID) %>%
pull(cell_ID)
data.frame(cell_ID = rownames(p_bins), pc1 = p_bins$pc1) %>%
mutate(range = cut_interval(pc1, n = classes))  -> p_bins_tmp
p_bins_tmp %>%
filter(cell_ID %in% SA_incl_heps) %>%
distinct(range) %>%
arrange(range) %>%
mutate(bin = c(1:classes)) %>%
right_join(p_bins_tmp) %>%
filter(cell_ID %in% SA_incl_heps) %>%
column_to_rownames("cell_ID") %>%
mutate(bin = abs(bin - (classes + 1))) -> p_bins
d %>%
dplyr::select(cell_ID, int_core, Protein) %>%
spread(cell_ID, int_core) %>%
gather(cell_ID, int_core, !Protein) %>%
mutate(int_core = ifelse(is.na(int_core), 0, int_core)) %>%
left_join(meta_pg) %>%
left_join(p_bins %>% rownames_to_column("cell_ID") %>% drop_na(bin)) %>%
group_by(Protein, Symbol, ENSEMBL, bin) %>%
summarise(int = log2(mean(2^int_core))) %>%
drop_na(bin) -> table_proteome_to_FACS
write_tsv(as.data.frame(table_proteome_to_FACS), "../output/Tables/Proteome_to_FACS_8PCbins.tsv")
